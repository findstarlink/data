# Generated initially using github-actions-wizard (https://github.com/cmdr2/github-actions-wizard)

name: CI Pipeline
run-name: CI Pipeline
on:
  push:
    branches:
      - main
  workflow_run:
    workflows:
      - Update TLE Data
    types:
      - completed
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Create tle.js
      run: |-
        echo "var TLE = " > tle.js
        cat tle.json >> tle.js
        echo "\n" >> tle.js
    - name: Copy files into the build
      run: |-
        mkdir build
        cp tle.json tle.js strings_en-US.json starlink_celestrak_supplemental.txt build/
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: build
        path: build
    - name: Deploy to Cloudflare Pages
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: pages deploy build --project-name=findstarlink-data

  major_version_bump:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get previous commit SHA
        id: prev_commit
        run: |
          echo "sha=$(git rev-parse HEAD^1)" >> $GITHUB_OUTPUT
      - name: Get previous package.json version
        id: prev_version
        run: |
          git show ${{ steps.prev_commit.outputs.sha }}:data/package.json > prev_package.json
          echo "version=$(jq -r .version prev_package.json)" >> $GITHUB_OUTPUT
      - name: Get current package.json version
        id: curr_version
        run: |
          echo "version=$(jq -r .version data/package.json)" >> $GITHUB_OUTPUT
      - name: Compare major versions
        id: has_major_bump
        run: |
          prev_major=$(echo "${{ steps.prev_version.outputs.version }}" | cut -d. -f1)
          curr_major=$(echo "${{ steps.curr_version.outputs.version }}" | cut -d. -f1)
          if [ "$curr_major" != "$prev_major" ]; then
            echo "Major version bumped from $prev_major to $curr_major"
            echo "bumped=true" >> $GITHUB_OUTPUT

            commit_msg=$(git log -1 --pretty=%B)
            echo "COMMIT_MSG<<EOF" >> $GITHUB_ENV
            echo "$commit_msg" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "No major version bump."
            echo "bumped=false" >> $GITHUB_OUTPUT
          fi
      - name: Create release if major version bumped
        if: steps.has_major_bump.outputs.bumped == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.curr_version.outputs.version }}
          name: v${{ steps.curr_version.outputs.version }}
          body: |
            ${{ env.COMMIT_MSG }}
          draft: false
          prerelease: false
      - name: Ask Cloudflare to invalidate specific cache URLs
        if: steps.has_major_bump.outputs.bumped == 'true'
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{
              "files": [
                "https://findstarlink.com/tle.json",
                "https://findstarlink.com/tle.js",
                "https://findstarlink.com/strings_en-US.json",
                "https://findstarlink.com/starlink_celestrak_supplemental.txt"
              ]
            }'
